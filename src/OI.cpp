// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/Drive.h"
#include "Commands/Intake_Down.h"
#include "Commands/Intake_Pos.h"
#include "Commands/Intake_Stop.h"
#include "Commands/Intake_Up.h"
#include "Commands/Roller_In.h"
#include "Commands/Roller_Out.h"
#include "Commands/Roller_Stop.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    driveStick.reset(new Joystick(0));
    
    btnIntakeArmHorizontal.reset(new JoystickButton(driveStick.get(), 11));
    btnIntakeArmHorizontal->WhenPressed(new Intake_Pos(-151500));
    btnIntakeArmVertical.reset(new JoystickButton(driveStick.get(), 12));
    btnIntakeArmVertical->WhenPressed(new Intake_Pos(-55000));
    btnIntakeDownStop.reset(new JoystickButton(driveStick.get(), 9));
    btnIntakeDownStop->WhenReleased(new Intake_Stop());
    btnIntakeUpStop.reset(new JoystickButton(driveStick.get(), 10));
    btnIntakeUpStop->WhenReleased(new Intake_Stop());
    btnIntakeDown.reset(new JoystickButton(driveStick.get(), 9));
    btnIntakeDown->WhenPressed(new Intake_Down(0.5));
    btnIntakeUp.reset(new JoystickButton(driveStick.get(), 10));
    btnIntakeUp->WhenPressed(new Intake_Up(0.5));
    btnRollersOutStop.reset(new JoystickButton(driveStick.get(), 2));
    btnRollersOutStop->WhenReleased(new Roller_Stop());
    btnRollersInStop.reset(new JoystickButton(driveStick.get(), 1));
    btnRollersInStop->WhenReleased(new Roller_Stop());
    btnRollersOut.reset(new JoystickButton(driveStick.get(), 2));
    btnRollersOut->WhenPressed(new Roller_Out(1));
    btnRollersIn.reset(new JoystickButton(driveStick.get(), 1));
    btnRollersIn->WhenPressed(new Roller_In(1));

    // SmartDashboard Buttons

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getDriveStick() {
   return driveStick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
