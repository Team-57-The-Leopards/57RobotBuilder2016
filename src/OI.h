// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef OI_H
#define OI_H

#include "WPILib.h"
#include "POVJoystickButton.h"
#include "LiftJoystickButton.h"

class OI {
private:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<Joystick> driveStick;
	std::shared_ptr<POVJoystickButton> btnBumpDn;
	std::shared_ptr<POVJoystickButton> btnBumpUp;
	std::shared_ptr<LiftJoystickButton> btnLiftRetract;
	std::shared_ptr<LiftJoystickButton> btnLiftExtend;
	std::shared_ptr<JoystickButton> btnAngleOff;
	std::shared_ptr<JoystickButton> btnManLift;
	std::shared_ptr<JoystickButton> btnLiftMode;
	std::shared_ptr<JoystickButton> btnCancelLiftMode;
	std::shared_ptr<LiftJoystickButton> btnLiftModeOutStop;
	std::shared_ptr<LiftJoystickButton> btnLiftModeInStop;
	std::shared_ptr<LiftJoystickButton> btnLiftModeOut;
	std::shared_ptr<LiftJoystickButton> btnLiftModeIn;
	std::shared_ptr<LiftJoystickButton> btnLiftManOutStop;
	std::shared_ptr<LiftJoystickButton> btnLiftManInStop;
	std::shared_ptr<LiftJoystickButton> btnLiftManOut;
	std::shared_ptr<LiftJoystickButton> btnLiftManIn;
	std::shared_ptr<JoystickButton> btnIntakeDownStop;
	std::shared_ptr<JoystickButton> btnIntakeUpStop;
	std::shared_ptr<JoystickButton> btnIntakeDown;
	std::shared_ptr<JoystickButton> btnIntakeVert;
	std::shared_ptr<JoystickButton> btnIntakeHorz;
	std::shared_ptr<JoystickButton> btnIntakeCdF;
	std::shared_ptr<JoystickButton> btnIntakePort;
	std::shared_ptr<JoystickButton> btnIntakePortStop;
	std::shared_ptr<LiftJoystickButton> btnRollersOutStop;
	std::shared_ptr<LiftJoystickButton> btnRollersInStop;
	std::shared_ptr<LiftJoystickButton> btnRollersOut;
	std::shared_ptr<LiftJoystickButton> btnRollersIn;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	OI();

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES

	std::shared_ptr<Joystick> getDriveStick();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES
};

#endif
